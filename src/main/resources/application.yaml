spring:
  application:
    name: service-UPDATE-TO-BE-NAME-OF-SERVICE

  # Disable SpringDoc auto-configuration
  autoconfigure:
    exclude: org.springdoc.core.configuration.SpringDocKotlinConfiguration
  config:
    import: "optional:configtree:/mnt/secrets/rpe/"
  threads:
    virtual:
      enabled: ${VIRTUAL_THREADS:false}
  datasource:
    # Override these via env in each environment
    url: ${APP_NAME_DATASOURCE_URL:jdbc:postgresql://localhost:55432/appdb}
    username: ${APP_NAME_DATASOURCE_USERNAME:app}
    password: ${APP_NAME_DATASOURCE_PASSWORD:app}
    hikari:
      pool-name: cp-hikari
      maximum-pool-size: ${APP_NAME_DB_POOL_SIZE:20}
      minimum-idle: ${APP_NAME_DB_MIN_IDLE:5}
      connection-timeout: 30000        # ms
      idle-timeout: 600000             # ms
      max-lifetime: 1800000            # ms
      keepalive-time: 300000           # ms
      validation-timeout: 5000         # ms

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate               # schema managed by Flyway
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.connection.provider_disables_autocommit: true
      hibernate.jdbc.batch_size: 50
      hibernate.order_inserts: true
      hibernate.order_updates: true

  sql:
    init:
      mode: never

flyway:
  enabled: true
  locations: classpath:db/migration
  baseline-on-migrate: ${FLYWAY_BASELINE_ON_MIGRATE:false}

server:
  port: ${SERVER_PORT:8082}
  shutdown: graceful
  http2:
    enabled: true
  forward-headers-strategy: framework   # honor X-Forwarded-* behind proxies
  compression:
    enabled: true
    min-response-size: 2KB
    mime-types: "application/json"

management:
  server:
    # Keep actuator on same port by default; override if you want a separate port
    port: ${MANAGEMENT_SERVER_PORT:${SERVER_PORT:8082}}
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      probes:
        enabled: true                  # liveness/readiness groups
  metrics:
    tags:
      service: service-hmcts-springboot-template
      cluster: ${CLUSTER_NAME:local}
      region: ${REGION:local}
  tracing:
    sampling:
      probability: ${TRACING_SAMPLER_PROBABILITY:1.0}
  otlp:
    tracing:
      endpoint: ${OTEL_TRACES_URL:http://localhost:4318/traces}
    metrics:
      export:
        enabled: ${OTEL_METRICS_ENABLED:false}
        url: ${OTEL_METRICS_URL:http://localhost:4318/metrics}

# Temporarily commented out due to SpringDoc compatibility issues with Spring Boot 4.0.0-M3
# springdoc:
#   packagesToScan: uk.gov.hmcts.cp.controllers
#   writer-with-order-by-keys: true

azure:
  application-insights:
    instrumentation-key: ${rpe.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}

jwt:
  # Expose upwards to allow env var override: export JWT_SECRET_KEY=... (base64, 256-bit min)
  secretKey: ${JWT_SECRET_KEY:it-must-be-a-string-secret-at-least-256-bits-long}
  filter:
    enabled: false

logging:
  level:
    root: INFO
  # Use your JSON config (async) â€” make sure this file exists
  config: classpath:logback.xml